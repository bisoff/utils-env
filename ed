#!/bin/bash
echo EDITOR: $EDITOR
platform=$(uname -s) # with no arguments will name the operating system.  - Cygwin Darwin Linux FreeBSD  linux-gnu msys win32 WindowsNT SunOS->Solaris AIX
#http://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script
#echo $OSTYPE # darwin14
#platform=${OSTYPE//[0-9.]/} â€“ ABach Sep 28 '11 at 21:47	 	
#case $OSTYPE in darwin*) echo I am a Mac ;; esac
#if [[ $OSTYPE == darwin* ]]; 
# [[ "$OSTYPE" == "linux-gnu" ]]; then
# [[ "$OSTYPE" == "darwin"* ]]; then
# [[ "$OSTYPE" == "cygwin" ]]; then        # POSIX compatibility layer and Linux environment emulation for Windows
# [[ "$OSTYPE" == "msys" ]]; then         # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
# [[ "$OSTYPE" == "win32" ]]; then         # I'm not sure this can happen.
# [[ "$OSTYPE" == "freebsd"* ]]; then
#else        # Unknown.
#case "$OSTYPE" in
#  solaris*) echo "SOLARIS" ;;
#  darwin*)  echo "OSX" ;; 
#  linux*)   echo "LINUX" ;;
#  bsd*)     echo "BSD" ;;
#  *)        echo "unknown: $OSTYPE" ;;
#esac

if [[ -f $1 ]]; then
	if [[ "$EDITOR" = "" ]]; then
		[[ "$platform" == "Darwin" ]] && vim $1 #echo editor #
		[[ "$platform" == "" ]] && start $1
	  else
		#echo "$EDITOR $1"
		"$EDITOR" "$1"
	  fi
  else
  	[ "$1" != "" ] && file=$(which $1 2>/dev/null)
	#[[ "$platform" == "Cygwin" ]] && file=$(where $1 2>nul)
  	if [[ "$1" != "" && "$file" = "" ]]; then
  		echo FILE NOT FOUND. current path: $PWD
  	  else
		echo FILE: $file
  		if [[ "$EDITOR" = "" ]]; then
			[[ "$platform" == "Darwin" ]] && vim $file
			[[ "$platform" == "Cygwin" ]] && start $file
		  else
  	  		#echo "$EDITOR $file"
  	  		"$EDITOR" "$file"
		  fi
		#sublime_text.exe
		#$ED
  	  fi
  fi