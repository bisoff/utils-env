#!/bin/bash
#add value to PATH
#ex1: . pathadd "%ODA_HOME%\bin"
#ex2: . pathadd c:\\app\\git\\cmd
#ex3: . pathadd 'c:\app\git\cmd'
#Warning: Use "." lunch syntax to use var immediately

[ $SHLVL -gt 1 ] && echo -e "${red}[PATHADD] Subshell can't change PATH after exit !${green} CORRECT USE: '. pathadd <path>'${norm}" 1>&2 && exit

NEWITEM=$1
if [[ "$NEWITEM" = "" ]]; then
	echo "for msys will add path to user's Environment"
	echo "for linux/osx will add to ~/.bash_profile"
	echo "path ignored if already present"
	echo "ex for msys:		. pathadd \"%PROJECT_HOME%\bin\""
	echo "ex : 			. pathadd c:\\app\\git\\cmd"
	echo "ex3: 			. pathadd 'c:\app\git\cmd'"
	echo "ex for current path: 	. pathadd ."
	exit
  fi
	#echo "path is missed"
	#pause
	#return

#разделить path
if [ "$TERM" == "cygwin" ]; then
	[[ "$NEWITEM" = "." ]] && NEWITEM=$(cmd //c "echo %CD%")
	KEY="HKCU\Environment"
	KEY_SYS="HKLM\SYSTEM\ControlSet001\Control\Session Manager\Environment"

	PATH2=$(Reg.exe query "$KEY" -v PATH | grep PATH | sed "s/\([[:blank:]]\+[^[:blank:]]\+\)\{2\}[[:blank:]]\+\(.*\)/\2/g") # | sed "s/%\([^%;]\+\)%/$\U\1/g"
	PATH_NEW=""
	SAVEIFS=$IFS
	IFS=';'
	read -ra ARR <<< "$PATH2"

	#по каждому item
	for VALUE in "${ARR[@]}"; do
		#echo $VALUE

		#если совпадает то выйти
		if [[ "$VALUE" = "$NEWITEM" ]]; then
			echo already exists
			pause
			return
		  fi
		if [[ "$PATH_NEW" = "" ]]; then
			PATH_NEW="$VALUE"
		  else
			PATH_NEW="$PATH_NEW;$VALUE"
		  fi
	  done
	IFS=$SAVEIFS

	PATH_NEW="$PATH_NEW;$NEWITEM"
	#добавить new item
	echo -e "\n"
	echo OLD: $PATH2
	echo --------------
	echo NEW: $PATH_NEW
	if [[ "$PATH_NEW" = "" ]]; then
		echo "empty"
		return
	  fi
	setx PATH "$PATH_NEW" > nul

	#обновляем текущий PATH (сессии)
	PATH_SYS=$(Reg.exe query "$KEY_SYS" -v PATH | grep PATH | sed "s/\([[:blank:]]\+[^[:blank:]]\+\)\{2\}[[:blank:]]\+\(.*\)/\2/g" | sed "s/%\([^%;]\+\)%/$\U\1/g")
	echo -e "\n"
	#echo PATH_SYS: $PATH_SYS
	PATH_NEW=$(echo "$PATH_NEW" | sed "s/%\([^%;]\+\)%/$\U\1/g")
	PATH_CURR="$PATH_NEW;$PATH_SYS"
	PATH_CURR=$(eval "echo \"$PATH_CURR \"")
	PATH_CURR=${PATH_CURR//\\/\/}
	#TODO: REPLACE C to $SYSTEMDRIVE
	PATH_CURR=${PATH_CURR//C:/\/c}
	PATH_CURR=${PATH_CURR//c:/\/c}
	PATH_CURR=${PATH_CURR//;/:}
	 #echo $PATH_CURR
	PATH="$PATH_CURR"  # TODO: в PATH остаются проценты из PATH_NEW
  else
  	[[ "$NEWITEM" = "." ]] && NEWITEM=$(pwd) #
  	ARR=(`echo $PATH | tr ':' '\n'`)
	for VALUE in "${ARR[@]}"; do
		#echo $VALUE = $NEWITEM
		if [[ "$VALUE" == "$NEWITEM" ]]; then
			echo -e "${red}$NEWITEM already exists !${norm}"
			#pause
			return
		  fi
	  done
	echo -e "\nexport PATH=\$PATH:$NEWITEM" >> ~/.bash_profile
	PATH="$PATH:$NEWITEM"
  fi
export PATH
#echo -e "\n"

#echo $PATH
#$ODA_HOME/utils/pathlist

pathlist
